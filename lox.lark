?start: program
program: declaration*
declaration: fun_decl | var_decl | statement
fun_decl: "fun" function
function: IDENTIFIER "(" parameters? ")" block
parameters: IDENTIFIER ( "," IDENTIFIER )*
var_decl: "var" IDENTIFIER ( "=" expression )? ";"
statement: expr_stmt | for_stmt | if_stmt | print_stmt  | if_stmt | block | return_stmt
return_stmt: "return" expression ";"
block: "{" declaration* "}"
expr_stmt: expression ";"
print_stmt: "print" expression ";"
if_stmt: "if" "(" expression ")" statement ("else" statement)?
while_stmt: "while" "(" expression ")" statement
for_stmt: "for" "(" ( var_decl | expr_stmt | ";" ) expression? ";" expression? ")" statement
expression: assignment
assignment: IDENTIFIER "=" assignment | logic_or
logic_or: logic_and ( "or" logic_and )*
logic_and: equality ( "and" equality )*
equality:  comparsion ( ( "!=" | "==" ) comparsion )*
comparsion: term ( ( ">" | ">=" | "<" | "<=" ) term )*
term: factor ( ( "-" | "+") factor )*
factor:  unary (( "/" | "*" ) unary )*
unary: ( "!" | "-" ) unary | call
call: primary ( "(" arguments? ")" )*
primary: NUMBER | STRING | BOOLEAN | NULL | "(" expression ")" | IDENTIFIER
arguments: expression ( "," expression )*
STRING: /"[^"]*"/
NUMBER: /\d+/
IDENTIFIER: /[a-zA-Z_][a-zA-Z_0-9]*/
BOOLEAN: "true" | "false"
NULL: "nil"

%import common.WS
%ignore WS
